@page "/books/create"
@inject LAB4_2.Data.ApplicationDbContext DB
@using LAB4_2.Components
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Book" OnValidSubmit="AddBook" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Book.Title" class="form-control" /> 
                <ValidationMessage For="() => Book.Title" class="text-danger" /> 
            </div>  
            <div class="mb-3">
                <label for="title" class="form-label">ImageUrl:</label> 
                <InputText id="title" @bind-Value="Book.Url" class="form-control" /> 
                <ValidationMessage For="() => Book.Url" class="text-danger" /> 
            </div>       
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Book.Description" class="form-control" /> 
                <ValidationMessage For="() => Book.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releasedata" class="form-label">ReleaseData:</label> 
                <InputDate id="releasedata" @bind-Value="Book.ReleaseData" class="form-control" /> 
                <ValidationMessage For="() => Book.ReleaseData" class="text-danger" /> 
            </div>              
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/books">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Book Book { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddBook()
    {
        Book.Rate = 0;
        Book.RateCount = 0;
        DB.Book.Add(Book);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/books");
    }
}
